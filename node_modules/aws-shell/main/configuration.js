const Joi = require('@hapi/joi')

class Configuration {
  constructor(options) {
    if (!options) throw new TypeError('Options are required')

    let optionsDefinition = {
      accessKeyId: Joi.string(),
      secretAccessKey: Joi.string(),
      region: Joi.string().regex(/^[-0-9a-zA-Z]+$/).default('ap-northeast-2'),
      bucket: Joi.string().required(),
      targetPath: Joi.string().allow(''),
      assetPath: Joi.string().default('dist'),
      assetMatch: Joi.string().default('**'),
      acl: Joi.string().default('public-read'),
      cacheControl: Joi.string().allow(''),
      skipFilePrefixes: Joi.string().allow(''),
      skipSuffixes: Joi.string().allow('')
    }

    let validOptions = Joi.validate(options, optionsDefinition)

    if (!validOptions.error) {
      this.options = validOptions.value
    } else {
      throw validOptions.error
    }
  }
}

module.exports = Configuration


