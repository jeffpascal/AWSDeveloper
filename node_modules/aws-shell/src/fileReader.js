const fs = require("fs")
const path = require("path")
const util = require("util")

const astat = util.promisify(fs.stat)
const areaddir = util.promisify(fs.readdir)
let pwd = process.env.PWD
let targetDir = path.resolve(pwd, './test/dist/')


async function fileReader(dir) {
  const files = await areaddir(dir)
  return Promise.all(files
    .map(f => path.join(dir, f))
    .map(async f => {
      const stats = await astat(f)
      return stats.isDirectory() ? fileReader(f) : f
    })
  )
}

function flatten(arr) {
  return arr.reduce((flat, toFlatten) => flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten), []);
}

fileReader(targetDir)
  .then(flatten)
  .then(files => JSON.stringify(files, null, 2))
  .then(console.log)
  .catch(console.error)
